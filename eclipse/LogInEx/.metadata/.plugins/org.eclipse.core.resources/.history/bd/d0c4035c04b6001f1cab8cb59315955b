package com.example.login;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/donors")
@CrossOrigin(origins = "http://localhost:3000")
public class DonorController {

    @Autowired
    private DonorRepository donorRepository;

    // Login endpoint
    @PostMapping("/login")
    public ResponseEntity<String> loginDonor(@RequestBody Donor loginRequest) {
        // ... (existing login code)
    }

    // Registration endpoint
    @PostMapping("/register")
    public ResponseEntity<String> registerDonor(@RequestBody Donor donorRequest) {
        // Validate mandatory fields
        if (donorRequest.getUserName() == null || donorRequest.getUserName().trim().isEmpty()) {
            return ResponseEntity.badRequest().body("Username is required.");
        }
        if (donorRequest.getPassword() == null || donorRequest.getPassword().trim().isEmpty()) {
            return ResponseEntity.badRequest().body("Password is required.");
        }
        if (donorRequest.getFirstname() == null || donorRequest.getFirstname().trim().isEmpty()) {
            return ResponseEntity.badRequest().body("First name is required.");
        }
        if (donorRequest.getLastname() == null || donorRequest.getLastname().trim().isEmpty()) {
            return ResponseEntity.badRequest().body("Last name is required.");
        }
        if (donorRequest.getPhone() == null || donorRequest.getPhone().trim().isEmpty()) {
            return ResponseEntity.badRequest().body("Phone number is required.");
        }

        // Check if the username already exists
        if (donorRepository.findByUserName(donorRequest.getUserName()).isPresent()) {
            return ResponseEntity.badRequest().body("Username already exists.");
        }

        // Save the new donor
        donorRepository.save(donorRequest);

        return ResponseEntity.ok("Registration successful!");
    }
}
